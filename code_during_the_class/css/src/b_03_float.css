@charset "UTF-8";
/* b_03_float.css */

#wrap {
  width: 900px;
  height: auto;
  min-height: 500px;
  padding-bottom: 500px;
  margin: auto;
  border-top: 1px;
  background-color: #eee;
}
.ex_part {
  width: 90%;
  height: auto;
  border: 1px solid #333;
}
h2 {
  width: 100%;
  border-bottom: 1px solid #3af;
}
.img_arr{
  width: 100%;
  height: auto;
  background-color: #fdd;
}
.img_arr > img {
  width: 60px;
  height: auto;
}
.img_content {
  width: 100%;
  height: auto;
  background-color: #cdf;
}
.img_area {
  float: left;
  width: 150px;
  height: 150px;
  margin-right: 15px;
}
.img_area img {
  width: 100%;
  height: auto;
}
.img_content p {
  width: 100%;
  height: auto;
  background-color: rgb(37, 187, 224);
}


/* 다시 */
.img_wrap {
  width: 500px;
  height: 200px;
  margin: auto;
  background-color: #fff;
}
.img_wrap img {
  width: 80px;
  height: auto;
}

.img_list {
  width: 500px;
  height: 200px;
  margin: auto;
  background-color: #fd0;
}
.img_list li {
  width: 80px;
  height: 80px;
  border-radius: 10px;
  background-color: #afd;
  list-style: none;
  /* 옆으로 나열할 수 있는 방법 1 -> 이 방법은 근데 li사이에 내가 원하지 않는, 그리고 조절할 수 없는 공간이 생겨버린다!*/
  /* display: inline-block; */
  /* 옆으로 나열할 수 있는 방법 2 */
  float: left;
  margin-right: 10px;
}
.img_list img {
  width: auto;
  height: 100%;
}


.content_area {
  width: 800px;
  height: 400px;
  margin: auto;
  background-color: #fa0;
}
/* 
  Tip! 이미지를 감싼 블록요소인 div의 width, height를 정해주면
  그 안에 있는 img는 width 를 100%로 그리고 height를 auto로 해주면 된다,
*/
.viewer {
  width: 120px;
  height: 120px;
  float: left;
  margin: auto;
  /* margin: 30px; */
  /* background-color: #afd; */
}
.viewer img {
  width: 100%;
  height: auto; 
}
.content_area p {
  width: 95%;
  height: auto;
  margin: auto;
  background-color: #fff;
}


.list_area {
  width: 90%;
  height: 800%;
  margin: auto;
  background-color: #fff;
}
.list_area ul {
  width: 100%;
  height: auto;
  padding: 0;
  background-color: #adf;
}
.list_area li {
  /* display: inline-block; */
  float: left;
  margin: 20px;
  list-style: none;
  width: 100px;
  height: 150px;
  border-radius: 5px;
  background-color: #7aa;
}
.list_area img {
  width: 100%;
  height: auto;
}
/* li의 부모요소인 ul은 height가 auto이기 때문에 
자식 요소인 li이 float이 되었을 때 결국 ul의 부피는 0이 된다.
문제점 발생!  */
.other {
  width: 900px;
  height: 100px;
  background-color: #fc9;
}


/*  그러면 해결책은~?? */
.float_area {
  width: 700px;
  height: auto;
  border-width: 2px;
  border-color: #07a;
  border-style: dashed;
  background-color: #7df;
}

.box {
  width: 100px;
  height: 100px;
  border-radius: 10px;
  font-size: 2rem;
  color: white;
}
.b_01 {
  float: left;
  background-color: rgb(211, 127, 127);
}
.b_02 {
  float: left;
  background-color: rgb(119, 59, 230);
}
.b_03 {
  float: left;
  background-color: rgb(207, 101, 42);
}
.b_04 {
  float: left;
  background-color: rgb(5, 182, 43);
}
.b_05 {
  float: left;
  background-color: rgb(211, 188, 213);
}
.floor {
  clear: both;
  width: 100%;
  height: 10px;
  background-color: #555;
}
/* cf. 이게 실무 사용법 -> clearfix */
/* .float_area::after {
  content: '';
  display: block;
  clear: both;
} */


/* <h3>float 처리 이해 2</h3> */
.float_02 {
  background-color: tomato;
}
.float_02 > div {
  float: left;
}
/* 여기서 clear 한적 없지만 hr이 기본적으로 clear를 내제한 블록 요소기 때문에... 요래도 가능! */
/* .float_02 > hr {
  opacity: 0;
} */
/* 그럼 br은?? */
.float_02 > br {
  display: block;
  clear: both;
}


/* 다른 방법은... */
ul.float_area {
  margin: 0;
  padding: 0;
}
ul.float_area li {
  margin: 0;
  padding: 0;
  list-style: none;
}
ul.float_area::after {
  clear: both;
  display: block;
  content: '';
  height: 0;
  width: 100%;
}

.clearfix::after {
  display: block;
  content: '';
  clear: both;
}
