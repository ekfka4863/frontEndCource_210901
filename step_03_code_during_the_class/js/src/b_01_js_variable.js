// b_01_js_variable.js

/*
  - js는 ;의 의미가 해당 기능/내용의 종료를 의미
  - js는 (). {}, [] ... 각종 괄호의 기능이 다르다... 
  - 또한, '', "". `` 의 기능이 다른데, 이러한 기호들의 열고/닫기
  가 굉장히 빈번하게 그리고 복잡하게 얽혀있다.
*/ 

var num = 0;
var n;
    n = 10; 
var a = 1;
var b = 1;
var c, d;
    c = 1, d = 1;
var nText = 'num: ';

console.log(num, n, a, b, c, d);
// console.log('num: ', num);
console.log(nText, num);
console.log(nText + num);
console.clear();

/* 단, 모든 이름을 변수로 선언할 수 있을까? 대답은 놉!
  - 예약어(reserved words): js에서 변수명, 함수명 등 이름으로 사용할 수 없는 단어로, 
    미리 선정해놓은 용어라고 해서 예약어라고 한다 
  - 키워드(keyword): js에서 특정한 목적을 위해 사용하는 단어이다.
    문법상 어떤 역할을 하는 단어들이라고 이해하면 편리하다. 
    (e.g. var, const, let, function, break, for, while, try, etc.)
  - cf. https://velog.io/@uoayop/3.-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%98%88%EC%95%BD%EC%96%B4

  - 예약어 후보: name 
  - 예약어 및 키워드 예시: -> 노션 TIL(2021-11-03-수) 참고!
  - 위의 예약어 및 키워드 외에도 매~~~우 많음으로 변수명을 설정하는 가장 쉬운 방법은...
      1. 의미없는 변수는 사용하지 않는다 (단, 숫자나 단순 값을 가져오기 위한 상황 제외)
      2. 각 변수를 camelCase 방식으로 사용하면 예약어나 키워드를 변수, 함수명 등으로 
        실수로라도 사용하지 않을 가능성/안정성이 더 높아진다
      3. js 에서는 대시라인방식(-), 언더스코어(_) 방식으로의 이름을 권장하지 않는다.
*/


/* 세미콜론(;) 을 마지막에 붙이는 경우 
  1. 변수 할당 또는 변경;
  2. ... 기능(); 
    (cf. 단, ... 기능 () {} -> 이거는 하나의 코드블록! 세미콜론 노노!!!)
*/ 


// -------------------------------------------------------------------------------------------

// var text;
console.log(text);        // undefined

var text = '글자입력';
// text = '글자입력';
console.log(text);        // '글자입력'


// 함수 호이스팅
fn();                     // '함수 호출!!!'

function fn() {
  console.log('함수 호출!!!');
}
fn();                     // '함수 호출!!!'





/*
호이스팅현상
  - 호이스팅 현상이란, 변수 또는 함수를 만들 때 생성된 위치보다 
  이전에 호출/수행되면 에러가 뜨는 것이 아니라, 무언가(undefined)를 
  도출되게 만든다는 것을 의미. 그래서 변수/함수가 이름이/기능이 상단으로 
  마치/가상으로 끌어올려진 것처럼 처리되기 때문이다.

  (cf. var 또는 function과 같이 선언하는 문들은 코드가 
    순차적으로 실행되는 시간을 의미하는 런타임 
    이전에 먼저 실행되기 때문에… 아직 값이 할당되지는 않았지만, 
    일단 변수 또는 함수가 만들어진다고 js 엔진인 인식/처리해서…)

  - 그래서... 작업의 순서를 어느정도 지켜서 쓰는것이 좋다!!!
    1. 변수 선언
    2. 함수 정의 
    3. 기능 구현 
*/ 


/* 정리: 
- 1. script의 작성 위치는 body의 끝(바로전)에 src 속성으로 불러오기 
- 2. 주석은 한줄 주석(//), 여러줄 주석(/** /)
- 3. 변수 선언은 var를 먼저 선언 (한번 선언한 이름은 다시 var를 사용하지 않는다)
- 4. ; 작성 위치 -> 변수 선언 또는 값 대입시, 함수/메소드 실행시
- 5. 변수는 일부 사용되는 용어를 피해서 작성
- 6. 호이스트 현상이 있으니 (변수를 선언하기도 전에 해당 변수가 미정의(undefined) 되었다! 라는 의미) 유의!
- 7. js는 다소 복잡한 구조들로 보이고 혼란이 있을 수 있으니 꼭 들여쓰기, 괄호체크 필수!!!!!

*/
