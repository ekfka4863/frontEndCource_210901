@charset "UTF-8";
/* variable.css*/

:root {
  font-size: 16px;

  /* color */
  --color-white: #fff;
  --color-black: #171717;
  --color-gray1: #eee;
  --color-gray2: #ccc;
  --color-gray3: #aaa;
  --color-gray4: #777;
  --color-gray5: #555;
  --color-primary: #f06;
  --color-hover: #0af;
  --color-focus: #057;
  
  
  /* font */
  --font-h2: 40px;
  --font-h3: 36px;
  --font-point: 60px;
  --font-p1: 18px;
  --font-p2: 16px;
  --font-p3: 14px;
  --font-p4: 12px;
  --font-tile1: 24px;
  --font-tile2: 20px;

  
  /* size */
  --width-1: 10px;

  /* border */
  --border-l1: var(--width-1) solid #333;
  --border-l2: var(--width-1) solid var(--color-primary);
}


/* 위의 변수들을 지원하는 브라우저가 아닐 수도 있으니까...
@supports () {} 사용해서 ... 
변수를 이해하니? 나 이거 사용해도 되니??? 이렇게 테스트를 해봐야한다! 
그래서 ... 
@supports 를 쓰고... () 안에 ... 인지하는지 물어볼 수 있는 조건 아무거나 하나를 적는다 ... 
e.g.   @supports (width:1rem) {} 
        -> 1rem 이라는 단위를 인지하니? 지원하니? 만약 () 안에 조건이 true면 수행한다 ... 
*/
@supports (width: 1rem) {
  /* 만약 1rem을 인지한다면 아래와 같이 ... 적용하라
  이런 의미! 이건 예시일 뿐! 
  원래 rem을 인지하면 @supports도 지원하고... 변수도 지원하는 브라우저라는 의미다! */
  :root {
    /* font */
    --font-h2: 40rem;
    --font-h3: 36rem;
    --font-point: 60rem;
    --font-p1: 18rem;
    --font-p2: 16rem;
    --font-p3: 14rem;
    --font-p4: 12rem;
    --font-tile1: 24rem;
    --font-tile2: 20rem;

    
    /* size */
    --width-1: 10rem;
  }
}
