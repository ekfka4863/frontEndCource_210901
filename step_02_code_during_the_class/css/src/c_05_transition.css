@charset "UTF-8";
/* c_05_transition.css*/


#wrap {
  width: 900px;
  height: auto;
  margin: auto;
  background-color: #eee;
  padding-bottom: 700px;
  box-sizing: content-box;
}

.part {
  width: 95%;
  height: auto;
  margin: auto;
  border: 1px solid #777;
  padding: 0.5rem;
}
.part ul {
  width: 100%;
  height: auto;
  background-color: #fdd;
}
.part li {
  width: 100%;
  height: 300px;
  margin-bottom: 50px;
  padding: 3rem;
  border-bottom: 1px solid #0af;
}

.part span {
  display: block;
  width: 4rem;
  height: 4rem;
  text-align: center;
  line-height: 4rem;
  border-radius: 0.5rem;
  background-color: #f73;
}

/* 마우스 호버시 이동 효과 with 애니메이션 */
.tr1:hover li:nth-child(1) {
  transform: translate(400px);
  /* transition: all ms ease; */

  transition-property: transform;
  transition-duration: 1000ms;
  transition-timing-function: ease;    
  /* default값은 ease이고 ...
  ease: 점점 빠르다가 느리게 (자연스럽게) 
  ease-in: 점점 빠르게 
  ease-out: 점점 느리게 
  ease-in-out: 점점 빨라졌다가 느리게 (시작 부분과 끝부분의 속도가 똑같다 )
  linear: 동일한 속도
  cubic-bezier (수치......);
  */
  transition-delay: 1s;
}


/* 근데 .tr1에 호버할때는 트랜시션이 잘 먹히지만 호버를 멈추면 바로 뚝 하고 
원래 자리로 돌아가는 것을 볼 수 있다... 그래서 ... 
해당 요소에 호버시에 적용하고 싶은 스타일을 하고... 
아래와 같이 그냥 요소에 ... transition에 관한 속성을 적어준다...!? */
.tr1 li:nth-child(2) span {
  /* transition-property: transform;  */
  transition-property: transform, background-color, color; 
  /* transition-duration: 2000ms; */
  transition-duration: 2000ms, 1000ms;
  transition-timing-function: ease-out;
  /* transition-delay: 300ms; */
  transition-delay: 300ms, 1000ms;
}
.tr1:hover li:nth-child(2) span {
  transform: translate(500px) scale(1.2);
  color: #fff;
  background-color: #f07;
}
.tr1 li:nth-child(3) span {
  /* transition: transform, rotate, background-color, font-weight, color; */
  /* 모든 속성에 대해(선택자), 2초동안 구현한다(구현 시간), Linear한 움직임으로(움직임), 지연시간은 300ms (지연시간)...  */
  transition: all 2000ms linear 300ms;
}
.tr1:hover li:nth-child(3) span {
  transform: translate(700px) rotate(360deg);
  background-color: #06f;
  font-weight: 700;
  color: #777;

}
.tr1 li:nth-child(4) span {
  transition: all 2000ms cubic-bezier(.16,.73,.94,.29) 300ms;
  /* https://cubic-bezier.com/#.17,.67,.83,.67 */
}
.tr1:hover li:nth-child(4) span {
  transform: translate(700px) rotate(360deg);
  background-color: #06f;
  font-weight: 700;
  color: #777;
}
.tr1 li:nth-child(5) span {
  transition: all 2000ms cubic-bezier(.16,.73,.94,.29) 300ms;
}
.tr1:hover li:nth-child(5) span {
  transform: translate(700px) rotate(360deg);
  background-color: #06f;
  font-weight: 700;
  color: #777;

  /* 이렇게 뒤에 또 써주면... 갈떄는 아래 코드가 먹힘!
  하지만 다시 돌아올 때는 위의 4번과 같은 시간과 효과로 돌아옴...  */
  transition: all 500ms ease;
}




/* 쌤이랑 같이 연습문제 */
.tran_ex {
  position: relative; 
  z-index:100;
  width: 400px; height: 600px;
  margin:5rem auto;
  padding:1.2rem;
  border:1px solid #777;
  background-color: #ccc;
}

.div_line {
  position: absolute; top: 0; left: 0; 
  /* 나중에 이미지나 내용을 추가했을 때, 
  border가 이에 영향을 미치지 않기 위해... 포지션이니까...
  그래서 최대한 뒤로 밀어버리는 것! */
  z-index: -1;
  width: 100%; height: 100%;
}

.div_line span {
  position: absolute;
  display: block; 
  background-color: #0af;
  transition: all 500ms linear; 
  --time: 500ms;
}

.div_line .line_01 {top:0; left:0; height:1rem;      width:0; 
  /* transition-delay:1500ms; */
  transition-delay:calc( var(--time) * 3);
}
.div_line .line_02 {top:0; right:0; width:1rem;      height:0;
  /* transition-delay:1000ms; */
  transition-delay:calc( var(--time) * 2);
}
.div_line .line_03 {bottom:0; right:0;  height:1rem; width:0; 
  /* transition-delay:500ms; */
  transition-delay:calc( var(--time) * 1);
}
.div_line .line_04 {bottom:0; left:0; width:1rem;    height:0;
  /* transition-delay:0ms; */
  transition-delay:calc( var(--time) * 0);
}
/* .div_line:hover span { } */

.div_line:hover .line_01 {width:100%;
  transition-delay:0ms; }
.div_line:hover .line_02 {height:100%;
  transition-delay:500ms; }
.div_line:hover .line_03 {width:100%;
  transition-delay:1000ms; }
.div_line:hover .line_04 {height:100%;
  transition-delay:1500ms; }



/* 쌤이랑 같이 연습문제 2 */
.hover_line {
  width: 700px;
  height: 100px;
  margin: 10px auto;
  background-color: #fcc;
}
.gage {
  width: 0;
  height: 100%;
  background-color: #05a;
  transition: all 1000ms ease-out 1300ms;
}
.hover_line:hover .gage {
  width: 100%;
  transition: all 1000ms linear ease-out;
}
.gage {
  transition: all 1300ms linear 300ms;
}
/* 팁:
  - 하나의 요소가 아니라 여러개의 요소의 사간을 다르게 배분시,
    다양한 에러가 발생하기 때문에 0초의 시간도 ms 단위를 붙여 사용
  - 마우스를 올리거나, 벗어나거나, 누르거나, 띄거나 등 
    2가지 이상의 선택 상황이 생기면 위와 동일한 에러가 발생하기 때문에, 
    선택자의 상황도 동일하게 처리하는 것이 좋다. 
*/